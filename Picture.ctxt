#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\r\n\ Constructor\ that\ takes\ no\ arguments\r\n
comment1.params=
comment1.target=void\ gray()
comment10.params=fileName
comment10.target=Picture(java.lang.String)
comment10.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment11.params=width\ height
comment11.target=Picture(int,\ int)
comment11.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n
comment12.params=copyPicture
comment12.target=Picture(Picture)
comment12.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\r\n\ copy\ of\ that\ picture\r\n
comment13.params=image
comment13.target=Picture(java.awt.image.BufferedImage)
comment13.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ hair()
comment3.params=
comment3.target=void\ invert()
comment4.params=sourcePicture\ divide
comment4.target=void\ recursive(Picture,\ int)
comment4.text=\ \r\n\ \ \ \ public\ void\ swirl()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ Pixel[]\ pix\ \=\ this.getPixels();\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ 699;\ i++)\r\n\ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ j\ \=\ 0;\ j\ <\ 699;\ j++)\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Pixel\ temp\ \=\ new\ Pixel();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ temp\ \=\ pix[i][j+1];\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pix[i][j+1]\ \=\ pix[i][j];\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n
comment5.params=sourcePicture\ xpos\ ypos
comment5.target=void\ copy(Picture,\ int,\ int)
comment5.text=\ \ \ \ \ \r\n\ \ \ \ public\ void\ secondcopy(Pixel[]\ sourcepix,\ int\ xpos,\ int\ ypos)\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ Pixel\ pix\ \=\ null;\r\n\ \ \ \ \ \ \ \ \ \ Pixel\ target\ \=\ null;\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ Pixel[]\ targetpix\ \=\ this.getPixels();\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ for\ (int\ source\ \=\ 0;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ source\ <\ sourcepix.length;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ source++)\r\n\ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //sets\ the\ target\ pixel\ color\ to\ the\ source\ pixel\ color\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pix\ \=\ sourcepix[source];\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ target\ \=\ targetpix[source];\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ target.setColor(pix.getColor());\r\n\ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n
comment6.params=
comment6.target=void\ mirrorVertical()
comment6.text=\r\n\ mirrors\ around\ a\ vertical\ line\ in\ the\ middle\ of\ the\ picture\r\n\ based\ on\ its\ width\r\n
comment7.params=
comment7.target=void\ mirrorHorizontal()
comment7.text=\r\n\ mirrors\ around\ a\ horizontal\ line\ in\ the\ middle\ of\ the\ picture\r\n\ based\ on\ its\ width\r\n
comment8.params=
comment8.target=void\ mirrorTemple()
comment9.params=source\ option
comment9.target=void\ copyflowerSmaller(Picture,\ java.lang.String)
numComments=16
